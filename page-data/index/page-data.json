{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"site":{"siteMetadata":{"title":"🏃🏻UndefinedP.log","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"슉.슈슉.내.내한테.왜.이러는.데. 음~^^ 그럴 줄 알았습니다~^^ 라고 말할 수 있을 정도로 정말 정말 많이 보는 에러이다. 그런데 이 에러 도대체 왜 발생하는걸까?! GROUP BY GROUP BY는 같은 값을 가진 행끼리 하나의 그룹으로 뭉춰주는 역할을 한다. 아래의 예시를 보면 더 빠르게 이해가 갈 것이다. group by 이는 Employee라…","fields":{"slug":"/sql/groupby/"},"frontmatter":{"date":"March 13, 2022","title":"[PostgreSQL]column must appear in the GROUP BY clause or be used in an aggregate function","category":"sql","draft":false}}},{"node":{"excerpt":"node-schedule은 형식을 기반으로 rule을 설정해서, 해당하는 시간에 함수를 실행하는 방식으로 구동된다. Cron이란? 컴퓨터 운영체제에서 시간 기반으로 job-scheule을 설정할 수 있는 프로세스를 말한다. 여기서 스케줄링 파라미터로 사용되는 표현식을 이라고 한다. 사용하기전에 잠깐! [공식문서] Node Schedule은 스크립트가 동작…","fields":{"slug":"/Node/node_schedule/"},"frontmatter":{"date":"February 27, 2022","title":"node-schedule을 이용해서 특정시간에 이벤트를 발생시키기","category":"node.js","draft":false}}},{"node":{"excerpt":"macOS기반에서 PostgreSQL을 설치하고, db관리툴인 dbeaver과 연동까지 해보자! 처음으로 맥에서 postgrSQL 세팅하면서 있었던 우당탕탕얼레벌레 어 왜 안돼???? 두번은 겪기 싫어서 정리하기 1. postgreSQL 설치 설치 서비스 시작 버전 확인 이런식으로 버전이 잘 확인되면 설치는 끝났다! 2. postgreSQL 설정 놀랍게도…","fields":{"slug":"/sql/installpsql/"},"frontmatter":{"date":"December 28, 2021","title":"[PostgreSQL]MacOS에서 PostgreSQL 설치 / 유저 & 디비설정 / DBeaver 연동까지 가보자고(1)","category":"sql","draft":false}}},{"node":{"excerpt":"자바스크립트로 천단위마다 콤마를 찍는 세가지 방법! 1. 정규식으로 사용하기 2. .toLocaleString() 사용하기 Number이외에도 객채나 날짜, 배열에도 적용가능하다.  이란 특정 자료가 들어왔을 때 설정해놓은 지역에서 읽는 형태로 바꿔주는 함수이다. 내가 currency type을 일본으로 설정하면 표기가 엔화로 자동적으로 바뀌는 식이다. …","fields":{"slug":"/js/currency/"},"frontmatter":{"date":"December 10, 2021","title":"[Javascript] 💵숫자 천단위마다 콤마찍기(화폐단위)","category":"Javascript","draft":false}}},{"node":{"excerpt":"문법 COALESCE(컬럼, 대체값1…대체값n) 👉 컬럼이 null인 경우에 대체값으로 반환 대체값이 null이 아닌 값이 나올 때까지 대체값을 불러온다. 활용 price seat 100000 50 55000 null 80000 279 여기서 와 를 곱한 값을 이라고 할 때, null이 있으면 값도 null이 나오기 때문에 저 값을 다른 값으로 치환해야한…","fields":{"slug":"/sql/coalesce/"},"frontmatter":{"date":"December 07, 2021","title":"[PostgreSQL]COALESCE 함수","category":"sql","draft":false}}},{"node":{"excerpt":"🐱 문제 링크 고양이를 출력한다 풀이 고양이 귀여워. 저 모양대로 콘솔로 찍어주면 된다. 그대신에  앞에 역슬래시를 한번 더 추가해야한다!","fields":{"slug":"/Algorithm/211026/"},"frontmatter":{"date":"October 26, 2021","title":"[백준 10171]고양이","category":"Algorithm","draft":false}}},{"node":{"excerpt":"🔮 문제 링크 로또 6/45(이하 ‘로또’로 표기)는 1부터 45까지의 숫자 중 6개를 찍어서 맞히는 대표적인 복권입니다. 아래는 로또의 순위를 정하는 방식입니다. 순위 당첨 내용 1 6개 번호가 모두 일치 2 5개 번호가 일치 3 4개 번호가 일치 4 3개 번호가 일치 5 2개 번호가 일치 6(낙첨) 그 외 로또를 구매한 민우는 당첨 번호 발표일을 학수…","fields":{"slug":"/Algorithm/211011/"},"frontmatter":{"date":"October 11, 2021","title":"로또의 최고 순위와 최저 순위","category":"Algorithm","draft":false}}},{"node":{"excerpt":"🔫 문제 링크 새로 생긴 놀이기구는 인기가 매우 많아 줄이 끊이질 않습니다. 이 놀이기구의 원래 이용료는 price원 인데, 놀이기구를 N 번 째 이용한다면 원래 이용료의 N배를 받기로 하였습니다. 즉, 처음 이용료가 100이었다면 2번째에는 200, 3번째에는 300으로 요금이 인상됩니다. 놀이기구를 count번 타게 되면 현재 자신이 가지고 있는 금액…","fields":{"slug":"/Algorithm/211010/"},"frontmatter":{"date":"October 10, 2021","title":"부족한 금액 계산하기","category":"Algorithm","draft":false}}},{"node":{"excerpt":"GitHub Actions 블로그를 새로 파서 글을 작성을 하면서 아주 치명적으로 귀찮은 문제가 하나 생겼다. 바로\n!! 포스팅을 하나 쓸 때마다 일일히 배포를 하는 스크립트를 치는 것이 너무 귀찮았던 나는 자동화의 간절함을 느낀다. 구글에서 열심히 서치를 한 결과 와 이라는 툴을 발견했고 … 그러다가 결국 라는 방법을 채택하기로 결심을 하는데 …더보기 …","fields":{"slug":"/DevOps/GA/"},"frontmatter":{"date":"October 07, 2021","title":"🪄GitHub Actions를 이용해서 CI/CD를 구축해보자!","category":"DevOps","draft":false}}},{"node":{"excerpt":"이전에 했던 BASENOTE 프로젝트에서 구현하지 못했던 필터링 기능을 시간이 나는 김에 한번 구현을 해보자고 결심을 했다. (참고로 이건 BASENOTE 프로젝트 이후에 작성한 회고록><) ⚡️ GITHUB  ❗️이번에 코드를 작성하면서 고려한 것 이전에 작성한 코드를 갈아엎는 것을 최대한 줄이기. 중복되는 코드를 줄이기 → 결론적으로 말하자면..반 성공 …","fields":{"slug":"/회고/BASENOTE-REF/"},"frontmatter":{"date":"September 27, 2021","title":"✏️BASENOTE 프로젝트 회고 ver.2","category":"회고","draft":false}}},{"node":{"excerpt":"PAFFEM 사이트 클론코딩 Find Your Scent, 가장 나다운 향을 찾아드립니다 프로젝트 기간 : 0705 ~ 0723 (리팩토링 기간 일주일을 합해서 총 3주) FE Github BE Github 내가 맡은 역할✨ FE 상품 리스트 페이지를 반응형으로 구현 fetch를 이용해 백엔드와 통신해서 데이터 렌더링 받아온 데이터를 id순으로 가공한 뒤…","fields":{"slug":"/회고/BASENOTE/"},"frontmatter":{"date":"July 26, 2021","title":"✏️BASENOTE 프로젝트 회고 ver.1","category":"회고","draft":false}}}]}},"pageContext":{}},
    "staticQueryHashes": ["2486386679","3128451518"]}