{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/Node/node_schedule/",
    "result": {"data":{"site":{"siteMetadata":{"title":"🏃🏻UndefinedP.log","author":"UndefinedP","siteUrl":"https://undefinedp.github.io","comment":{"disqusShortName":"","utterances":"undefinedP/undefinedp.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"5baaa70a-cea3-58d2-b7a6-a81cb46f2b5a","excerpt":"node-schedule은 형식을 기반으로 rule을 설정해서, 해당하는 시간에 함수를 실행하는 방식으로 구동된다. Cron이란? 컴퓨터 운영체제에서 시간 기반으로 job-scheule을 설정할 수 있는 프로세스를 말한다. 여기서 스케줄링 파라미터로 사용되는 표현식을 이라고 한다. 사용하기전에 잠깐! [공식문서] Node Schedule…","html":"<p><a href=\"https://github.com/node-schedule/node-schedule\">node-schedule</a>은 <code class=\"language-text\">cron</code>형식을 기반으로 rule을 설정해서, 해당하는 시간에 함수를 실행하는 방식으로 구동된다.</p>\n<h2 id=\"cron이란\" style=\"position:relative;\"><a href=\"#cron%EC%9D%B4%EB%9E%80\" aria-label=\"cron이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cron이란?</h2>\n<p>컴퓨터 운영체제에서 시간 기반으로 job-scheule을 설정할 수 있는 프로세스를 말한다. 여기서 스케줄링 파라미터로 사용되는 표현식을 <code class=\"language-text\">Cron 표현식</code>이라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">*    *    *    *    *    *\n┬    ┬    ┬    ┬    ┬    ┬\n│    │    │    │    │    │\n│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)\n│    │    │    │    └───── month (1 - 12)\n│    │    │    └────────── day of month (1 - 31)\n│    │    └─────────────── hour (0 - 23)\n│    └──────────────────── minute (0 - 59)\n└───────────────────────── second (0 - 59, OPTIONAL)</code></pre></div>\n<h2 id=\"사용하기전에-잠깐\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0%EC%A0%84%EC%97%90-%EC%9E%A0%EA%B9%90\" aria-label=\"사용하기전에 잠깐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용하기전에 잠깐!</h2>\n<p><a href=\"https://github.com/node-schedule/node-schedule#overview\">[공식문서]</a></p>\n<ul>\n<li>Node Schedule은 스크립트가 동작하고 있을 때에만 실행된다!! 만약에 실행이 되지 않는다면 예약되어있는 스케쥴이 전부 사라진다고 한다.\n만약에 스크립트가 동작하고 있지 않을 때에도 스케쥴을 걸고싶다면, <strong>cron</strong>을 사용하라고 공식 문서에 명명되어있으니 참고하자!</li>\n<li>만약에 특정 시간이 아닌 <code class=\"language-text\">특정 간격</code>마다(ex. 10분간격으로 함수를 호출) Job을 수행시키고 싶다면 <strong>tode-scheduler</strong>을 이용하는게 더 좋다고 한다.</li>\n</ul>\n<h2 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> node-schedule</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> node-schedule</code></pre></div>\n<h2 id=\"사용법\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용법</h2>\n<h3 id=\"cron-syle-scheduling\" style=\"position:relative;\"><a href=\"#cron-syle-scheduling\" aria-label=\"cron syle scheduling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cron-syle Scheduling</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> schedule <span class=\"token keyword\">from</span> <span class=\"token string\">'node-schedule'</span>\n\n<span class=\"token comment\">// UTC 06</span>\n<span class=\"token keyword\">const</span> job <span class=\"token operator\">=</span> schedule<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span><span class=\"token string\">'00 06 * * *'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//실행</span>\n  <span class=\"token function\">Job</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 코드는 cron형식으로 매일 UTC 06시(한국시간으로는 15시)에 Job을 수행하는 코드이다.</p>\n<p>여기서 있는 *은 all을 의미하는거기때문에 무지성으로 넣다간..생각과는 다른 결과가 나올 수도 있으니 주의하자.</p>\n<h3 id=\"data-based-scheduling\" style=\"position:relative;\"><a href=\"#data-based-scheduling\" aria-label=\"data based scheduling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data-based Scheduling</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> schedule <span class=\"token keyword\">from</span> <span class=\"token string\">'node-schedule'</span>\n<span class=\"token keyword\">const</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token number\">2023</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> job <span class=\"token operator\">=</span> schedule<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'happy birthday'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약에 23년 1월 27일 00시 00분 00초같이 매우 특정한 시간에 스케쥴을 작동시키고 싶다면 data-based style을 사용하는것도 좋은 방법이다.</p>\n<h3 id=\"recurrence-rule-재귀식-규칙-설정\" style=\"position:relative;\"><a href=\"#recurrence-rule-%EC%9E%AC%EA%B7%80%EC%8B%9D-%EA%B7%9C%EC%B9%99-%EC%84%A4%EC%A0%95\" aria-label=\"recurrence rule 재귀식 규칙 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recurrence Rule (재귀식 규칙 설정)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> schedule <span class=\"token keyword\">from</span> <span class=\"token string\">'node-schedule'</span>\n\n<span class=\"token keyword\">const</span> rule <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">schedule<span class=\"token punctuation\">.</span>RecurrenceRule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nrule<span class=\"token punctuation\">.</span>dayOfWeek <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">schedule<span class=\"token punctuation\">.</span>Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nrule<span class=\"token punctuation\">.</span>hour <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\nrule<span class=\"token punctuation\">.</span>minute <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nrule<span class=\"token punctuation\">.</span>tz <span class=\"token operator\">=</span> <span class=\"token string\">'Asia/Seoul'</span>\n\nschedule<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span>rule<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">Job</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위의 코드는 일요일, 화요일, 수요일, 목요일 9시에 Job을 실행시키는 코드이다.</p>\n<p>RecurrenceRule에는 위처럼 배열로 범위를 설정할 수 있고, 타임존도 적용을 시킬 수 있다. 사용 가능한 타임존의 기준은 <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">이 문서</a>를 따른다.</p>\n<p>rule에 설정할 수 있는 값들은 아래와 같다.</p>\n<ul>\n<li>second (0-59)</li>\n<li>minute (0-59)</li>\n<li>hour (0-23)</li>\n<li>date (1-31)</li>\n<li>month (0-11)</li>\n<li>year</li>\n<li>dayOfWeek (0-6) Starting with Sunday</li>\n<li>tz</li>\n</ul>\n<h3 id=\"object-literal-syntax\" style=\"position:relative;\"><a href=\"#object-literal-syntax\" aria-label=\"object literal syntax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object Literal Syntax</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> job <span class=\"token operator\">=</span> schedule<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> hour<span class=\"token operator\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> minute<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> dayOfWeek<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this works every Sunday at 14:30'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>non-cron방식으로 Object Literal 방식을 사용할 수도 있다. 규칙은 동일하게 위의 rule을 따른다.</p>\n<h3 id=\"시작시간과-종료시간-설정\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%EC%8B%9C%EA%B0%84%EA%B3%BC-%EC%A2%85%EB%A3%8C%EC%8B%9C%EA%B0%84-%EC%84%A4%EC%A0%95\" aria-label=\"시작시간과 종료시간 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작시간과 종료시간 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> endTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>startTime<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> job <span class=\"token operator\">=</span> schedule<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> start<span class=\"token operator\">:</span> startTime<span class=\"token punctuation\">,</span> end<span class=\"token operator\">:</span> endTime<span class=\"token punctuation\">,</span> rule<span class=\"token operator\">:</span> <span class=\"token string\">'*/1 * * * * *'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start and end'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이런식으로 시작시간과 종료시간을 설정할 수도 있다. 위의 코드는 1분마다 5초후에 <code class=\"language-text\">console.log()</code>를 찍고, 10초 후에 멈춘다.</p>\n<h2 id=\"시간-설정-잘-했는데-제-시간에-얘가-작동을-안해요\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84-%EC%84%A4%EC%A0%95-%EC%9E%98-%ED%96%88%EB%8A%94%EB%8D%B0-%EC%A0%9C-%EC%8B%9C%EA%B0%84%EC%97%90-%EC%96%98%EA%B0%80-%EC%9E%91%EB%8F%99%EC%9D%84-%EC%95%88%ED%95%B4%EC%9A%94\" aria-label=\"시간 설정 잘 했는데 제 시간에 얘가 작동을 안해요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간 설정 잘 했는데 제 시간에 얘가 작동을 안해요!</h2>\n<p>그럴 수 있다…당연함…로컬 시간과 서버 시간 기준이 다를 수 있기 때문에 서버시간에 맞춰서 작업을 하거나, 아니면 Reccurence Rule을 사용해서 타임존을 명시를 해주면 해결된다!</p>\n<blockquote>\n<p>우리 회사같은 경우에는 서버 시간이 미국 시간으로 맞춰져있었나…하여튼 그래서 처음에는 스케줄이 계속 안걸려서 내가 뭔가 이상한건가 버그인건가 고민했었는데 그냥 타임존이 안맞았던거였다 얼척X 다들 타임존 확인을 잘하자…!</p>\n</blockquote>\n<hr>\n<p>상황에 맞게 node-schedule을 사용하면 굉장히 사람이 편해진다… 만약에 특정 시간에 어떠한 작업을 반복해야하는 로직을 짜야한다면 적극적으로 도입해보는걸 추천한다! 정말최고에</p>","frontmatter":{"title":"node-schedule을 이용해서 특정시간에 이벤트를 발생시키기","date":"February 27, 2022"}}},"pageContext":{"slug":"/Node/node_schedule/","previous":{"fields":{"slug":"/sql/installpsql/"},"frontmatter":{"title":"[PostgreSQL]MacOS에서 PostgreSQL 설치 / 유저 & 디비설정 / DBeaver 연동까지 가보자고(1)"}},"next":{"fields":{"slug":"/sql/groupby/"},"frontmatter":{"title":"[PostgreSQL]column must appear in the GROUP BY clause or be used in an aggregate function"}}}},
    "staticQueryHashes": ["2486386679","3128451518"]}